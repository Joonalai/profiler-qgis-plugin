[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "profiler-qgis-plugin"
dynamic = ["version"]
readme = "README.md"
license = "GPL-3.0-only"
license-files = ["LICENSE"]
requires-python = ">=3.9"
authors = [
    { name = "Cofactor Oy", email = "dev@cofactor.fi" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "qgis_plugin_tools>=0.5.0,<1",
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
qgis_profiler = ["py.typed"]
profiler_plugin = [
    "py.typed",
    "metadata.txt",
    "**/*.svg",
    "**/*.ts",
    "**/*.ui",
]

[tool.setuptools.dynamic]
version = {attr = "qgis_profiler.__version__"}


[tool.ruff]
src = ["src"]

lint.ignore = [
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed
    "G002", # Logging statement uses %
    "PGH003", # Use specific rule codes when ignoring type issues
]

lint.unfixable = [
    "F401", # Unused imports
    "F841", # Unused variables
]

line-length = 88

# List of all rules https://docs.astral.sh/ruff/rules/
lint.select = [
    "ANN", # flake8-annotations
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "C90", # flake8, mccabe
    # "D", # pydocstyle # TODO: enable before first actual release
    "E", # flake8, pycodestyle
    "F", # flake8, Pyflakes
    "FURB", # refurb
    "G", # flake8-logging-format
    "FBT", # flake8-boolean-trap
    "I", # isort
    "ICN", # flake8-import-conventions
    "INP", # flake8-no-pep420
    "ISC", # flake8-implicit-str-concat
    "LOG", # flake8-logging
    "N", # pep8-naming
    "PERF", # perflint
    "PIE", # flake8-pie
    "PGH", # pygrep-hooks
    "PL", # pylint
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific rules
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "T", # flake8-print
    "TC", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "TRY", # tryceratops
    "UP", # pyupgrade
    "W", # flake8, pycodestyle
]

# Avoiding flagging (and removing) `SC200` from any `# noqa`
# directives, despite Ruff's lack of support for `flake8-spellcheck`.
lint.external = ["SC200"]

target-version = "py39"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"test*" = [
    "INP001",
    "ANN201",
    "ANN202",
    "E501",
    "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
    "PLR0913", # Too many arguments to function call (len(args) > 5)
    "S101", # Use of assert detected
    "FBT001", # Boolean-typed positional argument in function definition
]


[tool.flake8]
max-line-length = 88
spellcheck-targets = "names"
dictionaries = "en_US,python,technical"
select = [
    "SC",
    "QGS"
]

per-file-ignores = [
    "test/*:INP001,SC200,QGS105",
    "src/profiler_test_utils/*:INP001,SC200,QGS105",
]

[tool.mypy]
python_version = 3.9
follow_imports = "normal"
show_column_numbers = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
timeout = 1000
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s %(levelname)-10s (%(filename)s) %(message)s"
log_cli_date_format = "%H:%M:%S"
qt_log_level_fail = "CRITICAL"
qgis_qui_enabled = true

[tool.coverage.paths]
source = ["src", "**/site-packages"]

[tool.coverage.run]
branch = true
source_pkgs = ["profiler_plugin", "qgis_profiler"]
omit = []

[tool.coverage.report]
exclude_also = [
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]

[tool.qgis_plugin_dev_tools]
plugin_package_name = "profiler_plugin"
version_number_source = "distribution"
runtime_requires = [
    "qgis_plugin_tools",
    "profiler-qgis-plugin"
]

[project.entry-points.qgis_plugin_dev_tools]
profiler_plugin = "profiler_plugin"
